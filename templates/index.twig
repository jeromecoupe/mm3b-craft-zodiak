{# template à étendre #}
{% extends "_layouts/base.twig" %}

{# 
Craft sait que nous sommes sur une route qui correspond à une et une seule entry (la homepage). Il va vous donner automatiquement une variable "entry" que vous pouvez utiliser directement. 

Vous pourriez aussi créer cette variable "entry" explicitement et lui assigner la seule entrée craft de la section homePage. Craft le fait à votre place en rendant disponible une variable "entry" puisque la route / l'URL correspond à une section de type single avec une seule entry.

{% set entry = craft.entries()
  .section("homePage")
  .one() %}
#}

{# contenu du block content du template étendu par {% extends %} (ligne 2) #}
{% block content %}

    <div class="c-pagesection  c-pagesection--brand">
      <div class="l-container">
        <h1 class="c-pagetitle">{{ entry.pageBigtitle }}</h1>
        <div class="c-homeintro">
          <p>{{ entry.homepageIntro }}</p>
          <p><a class="c-ctalink  c-ctalink--invert" href="/projects/">
            Our projects <svg aria-hidden="true" width="13" height="11" viewBox="0 0 13 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.20711 0.292908L12.4142 5.50001L7.20711 10.7071L5.79289 9.29291L8.58579 6.50001H0V4.50001H8.58579L5.79289 1.70712L7.20711 0.292908Z" fill="currentColor"/>
</svg>

          </a></p>
        </div>
      </div>
    </div>
  
    <div class="c-banner">
      {# les champs relationnels retournent toujours un tableau, il faut donc prenre le premier élément de ce dernier avec ".one" #}
      {% set img = entry.pageBanner.one() %}
      {# on teste pour savoir si une image existe bien avant d'afficher le code #}
      {{ img.url }}
      {% if img %}
        {# passer un objet à la fonction getUrl() avec les dimensions permet à Craft de générer des images de plusieurs tailles sur base d'une image source. Ici on génère une image de 800px de large et de 600px de haut, une autre de 1024px / 768px et une dernière de 1500px / 1125px  #}
        <img src="{{ img.getUrl({ width: 800, height: 600 }) }}"
             srcset="{{ img.getUrl({ width: 800, height: 600 }) }} 800w,
                     {{ img.getUrl({ width: 1024, height: 768 }) }} 1024w,
                     {{ img.getUrl({ width: 1500, height: 1125 }) }} 1500w,"
             sizes="100vw"
             loading="lazy"
             decoding="async"
             width="1500"
             height="844"
             alt="people in the office">
      {% endif %}
    </div>
    <div class="c-pagesection">
      <div class="l-container">

          <div class="l-split">
            <h2 class="c-smalltitle">{{ entry.homepageWedoTitle }}</h2>
            <div>

              <p class="c-intro">{{ entry.homepageWedoIntro }}</p>

              <ul class="c-vlist  c-vlist--m">
                <li>
                  <article class="c-service">
                    <h3 class="c-service__title">Discovery and planning</h3>
                    <p class="c-service__text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem labore ut, quas nemo ad fuga rerum iusto, quidem veritatis deserunt quos perferendis consequatur doloribus reprehenderit magni cumque omnis! Modi, quam.</p>
                  </article>
                </li>
                <li>
                  <article class="c-service">
                    <h3 class="c-service__title">Design and prototypes</h3>
                    <p class="c-service__text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem labore ut, quas nemo ad fuga rerum iusto, quidem veritatis deserunt quos perferendis consequatur doloribus reprehenderit magni cumque omnis! Modi, quam.</p>
                  </article>
                </li>
                <li>
                  <article class="c-service">
                    <h3 class="c-service__title">Code and interactivity</h3>
                    <p class="c-service__text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem labore ut, quas nemo ad fuga rerum iusto, quidem veritatis deserunt quos perferendis consequatur doloribus reprehenderit magni cumque omnis! Modi, quam.</p>
                  </article>
                </li>
                <li>
                  <article class="c-service">
                    <h3 class="c-service__title">Ongoing support</h3>
                    <p class="c-service__text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem labore ut, quas nemo ad fuga rerum iusto, quidem veritatis deserunt quos perferendis consequatur doloribus reprehenderit magni cumque omnis! Modi, quam.</p>
                  </article>
                </li>
              </ul>
            
            </div>
          </div>

      </div>
    </div>
    <div class="c-pagesection">
      <div class="l-container">

        <div class="l-split">
          <h2 class="c-smalltitle">{{ entry.homepageProjectsTitle }}</h2>
          <div>
            <p class="c-intro">{{ entry.homepageProjectsIntro }}</p>
          </div>
        </div>

        {#
          Afficher les 4 derniers projets
          - choper 4 entries dans les projets classés par date de publication
          - faire une boucle
            - la première fois qu'on passe dedans, afficher le début de <ul>
            - la dernière fois qu'on passe dedans, afficher la fin de </ul>
            - toujours afficher un <li></li> avec le projet au milieu
        #}

        {# aller chercher toutes les entries qui
          - appartiennent à la section 'projects'
          - les classer par dates de publication descendantes
          - limiter ls résultats à 4
          - prendre tt les entries .all() #}

        {% set latestProjects = craft.entries()
          .section("projects")
          .orderBy("postDate DESC")
          .limit(4)
          .all() %}

        {# on boucle sur les 4 projets #}
        {% for item in latestProjects %}
          {% if loop.first %}<ul class="l-grid  l-grid--2cols@small  l-grid--4cols@large  u-mb-xl">{% endif %}

            <li>
            
              {# 
                On inclu un composant pour pouvoir le réutiliser
                - Ce composant doit recevoir 4 parametres (titre, description, image, url)
                - Il doit idéalement être totalement indépendant de la page dans laquelle il est utilisé
                - On utilise "with" pour lui passer un objet qui contient tous ses parametres
                - On utilise "only" pour lui donner UNIQUEMENT accès à ces 4 paramètres et on lui coupe l'acces aux variables du contexte general (lers includes et les extends on accès au même ensemble de variables)
              #}

              {% include "_components/projectCard.twig" with {
                title: item.title,
                description: item.projectShortDescription,
                image: item.projectImage.one(),
                url: item.url
              } only %}

            </li>
          {% if loop.last %}</ul>{% endif %}
        {% endfor %}

        <p><a class="c-ctalink" href="/projects/">More projects <svg aria-hidden="true" width="13" height="11" viewBox="0 0 13 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.20711 0.292908L12.4142 5.50001L7.20711 10.7071L5.79289 9.29291L8.58579 6.50001H0V4.50001H8.58579L5.79289 1.70712L7.20711 0.292908Z" fill="currentColor"/>
</svg>
</a></p>


      </div>
    </div>
{% endblock %}